{"version":3,"sources":["main/DefaultWindow.ts"],"names":[],"mappings":";;AAAA,yBAAyB;AACzB,6BAA6B;AAE7B,iDAAoF;AAQpF,mBACC,SAAQ,kCAAkB;IAE1B,YAAY,IAAY;QACvB,KAAK,CAAC,IAAI,EAAE;YACX,kBAAkB,EAAE,IAAI;YACxB,eAAe,EAAE,IAAI;YACrB,UAAU,EAAE,KAAK;YACjB,cAAc,EAAE;gBACf,oHAAoH;gBACpH,WAAW,EAAE,KAAK,CAAC,6BAA6B;aAChD;SACD,CAAC,CAAC;IAEJ,CAAC;IAED;;OAEG;IACI,KAAK;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,GAAG,GAAsB,IAAI,CAAC,GAAG,CAAC;QACtC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,4DAA4D,CAAC,CAAC;QAC/E,GAAG,CAAC,kBAAkB,EAAE,CAAC;IAC1B,CAAC;IAEM,QAAQ;QACd,MAAM,CAAC,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM;YAC1C,uDAAuD;YACvD,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,aAAa,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,IAAI;gBACvE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,GAAG,CAAC,CAAC;oBACZ,MAAM,CAAC;gBACR,CAAC;gBACD,OAAO,CAAC,IAAI,CAAC,CAAC;YACf,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,YAAY;QAClB,MAAM,CAAC,qFAAqF,CAAC;IAC9F,CAAC;IAED;;OAEG;IACO,MAAM;QACf,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,+BAA+B;QAE/C,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,6DAA6D,CAAC,CAAC;IAC1G,CAAC;IAGO,MAAM;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACxB,wCAAwC;YACxC,IAAI,CAAC,MAAM,CAAC,WAAW;iBACrB,EAAE,CAAC,iBAAiB,EAAE;gBACtB,eAAe;gBACf,IAAI,CAAC,UAAU,EAAE;qBACf,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;YAC7C,CAAC,CAAC;iBACD,YAAY,EAAE,CAAC;QAClB,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAEzB,mEAAmE;YACnE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAC9B,yEAAyE;YACzE,qGAAqG;QACtG,CAAC;IACF,CAAC;CACD;AA1ED,sCA0EC","file":"DefaultWindow.js","sourcesContent":["import * as fs from 'fs';\r\nimport * as path from 'path';\r\n\r\nimport { ElectronWindowBase, BrowserWindowConstructorOptions } from 'electron-base';\r\n\r\n// This import is for TypeScript typing only, \r\n// this line will be removed from output .js file,\r\n// hence the script in app.ts is not executed by this import.\r\nimport { ElectronSampleApp } from '../app';\r\n\r\n\r\nexport class DefaultWindow \r\n\textends ElectronWindowBase {\r\n\r\n\tconstructor(name: string) {\r\n\t\tsuper(name, {\r\n\t\t\ttriggerGlobalClose: true,\r\n\t\t\tautoHideMenuBar: true,\r\n\t\t\tfullscreen: false,\r\n\t\t\twebPreferences: {\r\n\t\t\t\t//nodeIntegration: true, // If `false`, only web JS functionalities are available. NodeJS features will be disabled.\r\n\t\t\t\twebSecurity: false // Disable same-origin policy\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tpublic start(): void {\r\n\t\tthis.native.maximize();\r\n\t\tthis.render();\r\n\r\n\t\tlet app = <ElectronSampleApp>this.app;\r\n\t\tapp.logger.error('A dummy error by DefaultWindow! Check out /logs/error.txt!');\r\n\t\tapp.doSomethingSpecial();\r\n\t}\r\n\r\n\tpublic readFile(): Promise<string> {\r\n\t\treturn new Promise<string>((resolve, reject) => {\r\n\t\t\t// Let `path.join` decide \"/\" (Linux) or \"\\\" (Windows).\r\n\t\t\tfs.readFile(path.join(global.appRoot, 'example.txt'), 'utf8', (err, text) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tresolve(text);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tpublic saySomething(): string {\r\n\t\treturn 'Only serializable JSON objects can only be passed with properties of primary types.';\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tprotected onBlur(): void {\r\n\t\tsuper.onBlur(); // ALWAYS call parent's method!\r\n\r\n\t\tthis.native.webContents.executeJavaScript('if(window.defaultScreen) window.defaultScreen.showOverlay()');\r\n\t}\r\n\r\n\r\n\tprivate render(): void {\r\n\t\tif (this.app.isDebug()) {\r\n\t\t\t// Load view after dev tools has opened.\r\n\t\t\tthis.native.webContents\r\n\t\t\t\t.on('devtools-opened', () => {\r\n\t\t\t\t\t// Clear cache.\r\n\t\t\t\t\tthis.clearCache()\r\n\t\t\t\t\t\t.then(() => this.loadView('default.html'));\r\n\t\t\t\t})\r\n\t\t\t\t.openDevTools();\r\n\t\t} else {\r\n\t\t\tthis.setFullScreen(true);\r\n\r\n\t\t\t// Same with: this.loadURL(`${global.appRoot}/views/default.html`);\r\n\t\t\tthis.loadView('default.html');\r\n\t\t\t// Change view location: this._viewRoot = `${global.appRoot}/new-views/`;\r\n\t\t\t// this.loadView('default.html') same with: this.loadURL(`${global.appRoot}/new-views/default.html`);\r\n\t\t}\r\n\t}\r\n}"]}